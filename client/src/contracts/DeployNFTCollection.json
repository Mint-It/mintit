{
  "contractName": "DeployNFTCollection",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployNFTCollection(string,string)\":{\"returns\":{\"collectionAddress\":\"the address of the created collection contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployNFTCollection(string,string)\":{\"notice\":\"Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IrlNftCollectionManager.sol\":\"DeployNFTCollection\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbc4803332d45dff58f865ed21c942fe4668e47cc7196c8dfe84102040b1d70f\",\"dweb:/ipfs/QmXhZLsocznRWCSyhjo3vo66Z1VsuuNptAVb6ASPYsWtGx\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Artists.sol\":{\"keccak256\":\"0x97c6c5349fe36441dd55a361324e0ef4931cad029b8683e21e5dc0eb2d8da2fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8d5bd1a46320a12ac902dbe189ab1899d5efce11481c6570f80c95e9c505760\",\"dweb:/ipfs/QmVP4xSNb6rdCPM1PJdubYZqofXQNyLuSTegmHkZDHg3r5\"]},\"project:/contracts/IrlNFTCollection.sol\":{\"keccak256\":\"0x2f8c3f35c8617ccc76c067ce9a79b570ef9409fff21a19741aa4bd7096a7f13e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bed17222d87ecc6fec79e0d9e1006d07967d9d21433e0b48ebfe19b46a471468\",\"dweb:/ipfs/QmVDBdRojXMCsRx29hcSocxU5LebE34QvVyCLt3F3Q5TgG\"]},\"project:/contracts/IrlNftCollectionManager.sol\":{\"keccak256\":\"0x04628a5bca2b1422d8b1a3e726b2aaf409ff107cb8dd87222bdd343dae651c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63b779eb92151ad53c76e75ebdd231e51ed43b7645f0aad4c0efc64eec6b057e\",\"dweb:/ipfs/QmXbKdvoB9kELWSgD5dDa6o7iofs5RpYWC1dHiBZdCfHS2\"]},\"project:/contracts/Users.sol\":{\"keccak256\":\"0xf01df842ea2d07b5a57ef71ca0f4670daa2b8da573b6f96f8b95d124cd836c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d31e13e55026af09ff80d4184266259c4062d2af6255d0f28996da4b2f0e76d\",\"dweb:/ipfs/QmdDnBX5nES87jJxVYmgegBJ831JHwj1uTaZw7VauJ2qya\"]}},\"version\":1}",
  "bytecode": "0x614f05610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610620000375760003560e01c80639436e1d8146200003c575b600080fd5b8180156200004957600080fd5b50620000686004803603810190620000629190620002de565b62000080565b604051620000779190620003a8565b60405180910390f35b6000806200008f8484620000de565b9050600084604051602001620000a6919062000448565b604051602081830303815290604052805190602001209050808251602084016000f59250823b620000d657600080fd5b505092915050565b6060600060405180602001620000f4906200015a565b6020820181038252601f19601f82011660405250905080848460405160200162000120929190620004b3565b604051602081830303815290604052604051602001620001429291906200053b565b60405160208183030381529060405291505092915050565b61496c806200056483390190565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001d18262000186565b810181811067ffffffffffffffff82111715620001f357620001f262000197565b5b80604052505050565b60006200020862000168565b9050620002168282620001c6565b919050565b600067ffffffffffffffff82111562000239576200023862000197565b5b620002448262000186565b9050602081019050919050565b82818337600083830152505050565b60006200027762000271846200021b565b620001fc565b90508281526020810184848401111562000296576200029562000181565b5b620002a384828562000251565b509392505050565b600082601f830112620002c357620002c26200017c565b5b8135620002d584826020860162000260565b91505092915050565b60008060408385031215620002f857620002f762000172565b5b600083013567ffffffffffffffff81111562000319576200031862000177565b5b6200032785828601620002ab565b925050602083013567ffffffffffffffff8111156200034b576200034a62000177565b5b6200035985828601620002ab565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003908262000363565b9050919050565b620003a28162000383565b82525050565b6000602082019050620003bf600083018462000397565b92915050565b600081519050919050565b600081905092915050565b60005b83811015620003fb578082015181840152602081019050620003de565b838111156200040b576000848401525b50505050565b60006200041e82620003c5565b6200042a8185620003d0565b93506200043c818560208601620003db565b80840191505092915050565b600062000456828462000411565b915081905092915050565b600082825260208201905092915050565b60006200047f82620003c5565b6200048b818562000461565b93506200049d818560208601620003db565b620004a88162000186565b840191505092915050565b60006040820190508181036000830152620004cf818562000472565b90508181036020830152620004e5818462000472565b90509392505050565b600081519050919050565b600081905092915050565b60006200051182620004ee565b6200051d8185620004f9565b93506200052f818560208601620003db565b80840191505092915050565b600062000549828562000504565b915062000557828462000504565b9150819050939250505056fe60806040526040518060400160405280600581526020017f2e6a736f6e000000000000000000000000000000000000000000000000000000815250600f908051906020019062000051929190620001e7565b503480156200005f57600080fd5b506040516200496c3803806200496c833981810160405281019062000085919062000434565b818181600090805190602001906200009f929190620001e7565b508060019080519060200190620000b8929190620001e7565b505050620000db620000cf6200011960201b60201c565b6200012160201b60201c565b6001600b819055506000601160006101000a81548160ff021916908360048111156200010c576200010b620004b9565b5b021790555050506200054c565b600033905090565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001f59062000517565b90600052602060002090601f01602090048101928262000219576000855562000265565b82601f106200023457805160ff191683800117855562000265565b8280016001018555821562000265579182015b828111156200026457825182559160200191906001019062000247565b5b50905062000274919062000278565b5090565b5b808211156200029357600081600090555060010162000279565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200030082620002b5565b810181811067ffffffffffffffff82111715620003225762000321620002c6565b5b80604052505050565b60006200033762000297565b9050620003458282620002f5565b919050565b600067ffffffffffffffff821115620003685762000367620002c6565b5b6200037382620002b5565b9050602081019050919050565b60005b83811015620003a057808201518184015260208101905062000383565b83811115620003b0576000848401525b50505050565b6000620003cd620003c7846200034a565b6200032b565b905082815260208101848484011115620003ec57620003eb620002b0565b5b620003f984828562000380565b509392505050565b600082601f830112620004195762000418620002ab565b5b81516200042b848260208601620003b6565b91505092915050565b600080604083850312156200044e576200044d620002a1565b5b600083015167ffffffffffffffff8111156200046f576200046e620002a6565b5b6200047d8582860162000401565b925050602083015167ffffffffffffffff811115620004a157620004a0620002a6565b5b620004af8582860162000401565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200053057607f821691505b602082108103620005465762000545620004e8565b5b50919050565b614410806200055c6000396000f3fe60806040526004361061013c5760003560e01c806301ffc9a71461014157806306fdde031461017e578063081812fc146101a9578063095ea7b3146101e657806315c316fc1461020f57806318160ddd146102265780631f2898c31461025157806323b872dd146102685780632f745c591461029157806342842e0e146102ce57806345749ca4146102f75780634f6ccce71461031557806355f804b3146103525780636352211e1461037b5780636f8b44b0146103b857806370a08231146103e1578063715018a61461041e5780638da5cb5b1461043557806391efcf701461046057806395d89b411461048b578063a22cb465146104b6578063b863bd37146104df578063b88d4fde1461051c578063c87b56dd14610545578063da3ef23f14610582578063e985e9c5146105ab578063f2fde38b146105e8575b600080fd5b34801561014d57600080fd5b5061016860048036038101906101639190612b1b565b610611565b6040516101759190612b63565b60405180910390f35b34801561018a57600080fd5b5061019361068b565b6040516101a09190612c17565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb9190612c6f565b61071d565b6040516101dd9190612cdd565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190612d24565b6107a2565b005b34801561021b57600080fd5b506102246108b9565b005b34801561023257600080fd5b5061023b6109d8565b6040516102489190612d73565b60405180910390f35b34801561025d57600080fd5b506102666109e5565b005b34801561027457600080fd5b5061028f600480360381019061028a9190612d8e565b610b04565b005b34801561029d57600080fd5b506102b860048036038101906102b39190612d24565b610b64565b6040516102c59190612d73565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f09190612d8e565b610c09565b005b6102ff610c29565b60405161030c9190612d73565b60405180910390f35b34801561032157600080fd5b5061033c60048036038101906103379190612c6f565b610e5a565b6040516103499190612d73565b60405180910390f35b34801561035e57600080fd5b5061037960048036038101906103749190612f16565b610ecb565b005b34801561038757600080fd5b506103a2600480360381019061039d9190612c6f565b610fd7565b6040516103af9190612cdd565b60405180910390f35b3480156103c457600080fd5b506103df60048036038101906103da9190612c6f565b611088565b005b3480156103ed57600080fd5b5061040860048036038101906104039190612f5f565b611184565b6040516104159190612d73565b60405180910390f35b34801561042a57600080fd5b5061043361123b565b005b34801561044157600080fd5b5061044a6112c3565b6040516104579190612cdd565b60405180910390f35b34801561046c57600080fd5b506104756112ed565b6040516104829190613003565b60405180910390f35b34801561049757600080fd5b506104a0611300565b6040516104ad9190612c17565b60405180910390f35b3480156104c257600080fd5b506104dd60048036038101906104d8919061304a565b611392565b005b3480156104eb57600080fd5b5061050660048036038101906105019190612c6f565b6113a8565b6040516105139190612d73565b60405180910390f35b34801561052857600080fd5b50610543600480360381019061053e919061312b565b6113ea565b005b34801561055157600080fd5b5061056c60048036038101906105679190612c6f565b61144c565b6040516105799190612c17565b60405180910390f35b34801561058e57600080fd5b506105a960048036038101906105a49190612f16565b6114f6565b005b3480156105b757600080fd5b506105d260048036038101906105cd91906131ae565b611602565b6040516105df9190612b63565b60405180910390f35b3480156105f457600080fd5b5061060f600480360381019061060a9190612f5f565b611696565b005b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061068457506106838261178d565b5b9050919050565b60606000805461069a9061321d565b80601f01602080910402602001604051908101604052809291908181526020018280546106c69061321d565b80156107135780601f106106e857610100808354040283529160200191610713565b820191906000526020600020905b8154815290600101906020018083116106f657829003601f168201915b5050505050905090565b60006107288261186f565b610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e906132c0565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107ad82610fd7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490613352565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661083c6118db565b73ffffffffffffffffffffffffffffffffffffffff16148061086b575061086a816108656118db565b611602565b5b6108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a1906133e4565b60405180910390fd5b6108b483836118e3565b505050565b6108c16118db565b73ffffffffffffffffffffffffffffffffffffffff166108df6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90613450565b60405180910390fd5b6000600481111561094957610948612f8c565b5b601160009054906101000a900460ff16600481111561096b5761096a612f8c565b5b146109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a2906134e2565b60405180910390fd5b6001601160006101000a81548160ff021916908360048111156109d1576109d0612f8c565b5b0217905550565b6000600880549050905090565b6109ed6118db565b73ffffffffffffffffffffffffffffffffffffffff16610a0b6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614610a61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5890613450565b60405180910390fd5b60016004811115610a7557610a74612f8c565b5b601160009054906101000a900460ff166004811115610a9757610a96612f8c565b5b14610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace90613574565b60405180910390fd5b6002601160006101000a81548160ff02191690836004811115610afd57610afc612f8c565b5b0217905550565b610b15610b0f6118db565b8261199c565b610b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4b90613606565b60405180910390fd5b610b5f838383611a7a565b505050565b6000610b6f83611184565b8210610bb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba790613698565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610c24838383604051806020016040528060008152506113ea565b505050565b60006002600b5403610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790613704565b60405180910390fd5b6002600b8190555060026004811115610c8c57610c8b612f8c565b5b601160009054906101000a900460ff166004811115610cae57610cad612f8c565b5b14610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce590613770565b60405180910390fd5b600d546001610cfb6109d8565b610d0591906137bf565b10610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90613861565b60405180910390fd5b610d4f600c611ce0565b6000610d5b60646113a8565b90506000610d69600c611cf6565b905060006010600083815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060006010600083815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506003821015610e065760016010600083815260200190815260200160002060000160016101000a81548160ff021916908315150217905550610e40565b600a821015610e3f5760016010600083815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b5b610e4a3382611d04565b80925050506001600b8190555090565b6000610e646109d8565b8210610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c906138f3565b60405180910390fd5b60088281548110610eb957610eb8613913565b5b90600052602060002001549050919050565b610ed36118db565b73ffffffffffffffffffffffffffffffffffffffff16610ef16112c3565b73ffffffffffffffffffffffffffffffffffffffff1614610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90613450565b60405180910390fd5b60006004811115610f5b57610f5a612f8c565b5b601160009054906101000a900460ff166004811115610f7d57610f7c612f8c565b5b14610fbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb4906139b4565b60405180910390fd5b80600e9080519060200190610fd3929190612a0c565b5050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690613a46565b60405180910390fd5b80915050919050565b6110906118db565b73ffffffffffffffffffffffffffffffffffffffff166110ae6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614611104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fb90613450565b60405180910390fd5b6000600481111561111857611117612f8c565b5b601160009054906101000a900460ff16600481111561113a57611139612f8c565b5b1461117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117190613ad8565b60405180910390fd5b80600d8190555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111eb90613b6a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112436118db565b73ffffffffffffffffffffffffffffffffffffffff166112616112c3565b73ffffffffffffffffffffffffffffffffffffffff16146112b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ae90613450565b60405180910390fd5b6112c16000611d22565b565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b601160009054906101000a900460ff1681565b60606001805461130f9061321d565b80601f016020809104026020016040519081016040528092919081815260200182805461133b9061321d565b80156113885780601f1061135d57610100808354040283529160200191611388565b820191906000526020600020905b81548152906001019060200180831161136b57829003601f168201915b5050505050905090565b6113a461139d6118db565b8383611de8565b5050565b6000814244336040516020016113c093929190613bf3565b6040516020818303038152906040528051906020012060001c6113e39190613c5f565b9050919050565b6113fb6113f56118db565b8361199c565b61143a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143190613606565b60405180910390fd5b61144684848484611f54565b50505050565b60606114578261186f565b611496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148d90613cdc565b60405180910390fd5b60006114a0611fb0565b905060008151116114c057604051806020016040528060008152506114ee565b806114ca84612042565b600f6040516020016114de93929190613dcc565b6040516020818303038152906040525b915050919050565b6114fe6118db565b73ffffffffffffffffffffffffffffffffffffffff1661151c6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614611572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156990613450565b60405180910390fd5b6000600481111561158657611585612f8c565b5b601160009054906101000a900460ff1660048111156115a8576115a7612f8c565b5b146115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df906139b4565b60405180910390fd5b80600f90805190602001906115fe929190612a0c565b5050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61169e6118db565b73ffffffffffffffffffffffffffffffffffffffff166116bc6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614611712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170990613450565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177890613e6f565b60405180910390fd5b61178a81611d22565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061185857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806118685750611867826121a2565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661195683610fd7565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006119a78261186f565b6119e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119dd90613f01565b60405180910390fd5b60006119f183610fd7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a6057508373ffffffffffffffffffffffffffffffffffffffff16611a488461071d565b73ffffffffffffffffffffffffffffffffffffffff16145b80611a715750611a708185611602565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a9a82610fd7565b73ffffffffffffffffffffffffffffffffffffffff1614611af0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ae790613f93565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5690614025565b60405180910390fd5b611b6a83838361220c565b611b756000826118e3565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611bc59190614045565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c1c91906137bf565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611cdb83838361231e565b505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b611d1e828260405180602001604052806000815250612323565b5050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4d906140c5565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611f479190612b63565b60405180910390a3505050565b611f5f848484611a7a565b611f6b8484848461237e565b611faa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa190614157565b60405180910390fd5b50505050565b6060600e8054611fbf9061321d565b80601f0160208091040260200160405190810160405280929190818152602001828054611feb9061321d565b80156120385780601f1061200d57610100808354040283529160200191612038565b820191906000526020600020905b81548152906001019060200180831161201b57829003601f168201915b5050505050905090565b606060008203612089576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061219d565b600082905060005b600082146120bb5780806120a490614177565b915050600a826120b491906141bf565b9150612091565b60008167ffffffffffffffff8111156120d7576120d6612deb565b5b6040519080825280601f01601f1916602001820160405280156121095781602001600182028036833780820191505090505b5090505b60008514612196576001826121229190614045565b9150600a856121319190613c5f565b603061213d91906137bf565b60f81b81838151811061215357612152613913565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561218f91906141bf565b945061210d565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b612217838383612505565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612259576122548161250a565b612298565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612297576122968382612553565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036122da576122d5816126c0565b612319565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612318576123178282612791565b5b5b505050565b505050565b61232d8383612810565b61233a600084848461237e565b612379576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237090614157565b60405180910390fd5b505050565b600061239f8473ffffffffffffffffffffffffffffffffffffffff166129e9565b156124f8578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026123c86118db565b8786866040518563ffffffff1660e01b81526004016123ea9493929190614245565b6020604051808303816000875af192505050801561242657506040513d601f19601f8201168201806040525081019061242391906142a6565b60015b6124a8573d8060008114612456576040519150601f19603f3d011682016040523d82523d6000602084013e61245b565b606091505b5060008151036124a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249790614157565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506124fd565b600190505b949350505050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000600161256084611184565b61256a9190614045565b905060006007600084815260200190815260200160002054905081811461264f576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506126d49190614045565b905060006009600084815260200190815260200160002054905060006008838154811061270457612703613913565b5b90600052602060002001549050806008838154811061272657612725613913565b5b906000526020600020018190555081600960008381526020019081526020016000208190555060096000858152602001908152602001600020600090556008805480612775576127746142d3565b5b6001900381819060005260206000200160009055905550505050565b600061279c83611184565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361287f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128769061434e565b60405180910390fd5b6128888161186f565b156128c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128bf906143ba565b60405180910390fd5b6128d46000838361220c565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461292491906137bf565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46129e56000838361231e565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b828054612a189061321d565b90600052602060002090601f016020900481019282612a3a5760008555612a81565b82601f10612a5357805160ff1916838001178555612a81565b82800160010185558215612a81579182015b82811115612a80578251825591602001919060010190612a65565b5b509050612a8e9190612a92565b5090565b5b80821115612aab576000816000905550600101612a93565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612af881612ac3565b8114612b0357600080fd5b50565b600081359050612b1581612aef565b92915050565b600060208284031215612b3157612b30612ab9565b5b6000612b3f84828501612b06565b91505092915050565b60008115159050919050565b612b5d81612b48565b82525050565b6000602082019050612b786000830184612b54565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612bb8578082015181840152602081019050612b9d565b83811115612bc7576000848401525b50505050565b6000601f19601f8301169050919050565b6000612be982612b7e565b612bf38185612b89565b9350612c03818560208601612b9a565b612c0c81612bcd565b840191505092915050565b60006020820190508181036000830152612c318184612bde565b905092915050565b6000819050919050565b612c4c81612c39565b8114612c5757600080fd5b50565b600081359050612c6981612c43565b92915050565b600060208284031215612c8557612c84612ab9565b5b6000612c9384828501612c5a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cc782612c9c565b9050919050565b612cd781612cbc565b82525050565b6000602082019050612cf26000830184612cce565b92915050565b612d0181612cbc565b8114612d0c57600080fd5b50565b600081359050612d1e81612cf8565b92915050565b60008060408385031215612d3b57612d3a612ab9565b5b6000612d4985828601612d0f565b9250506020612d5a85828601612c5a565b9150509250929050565b612d6d81612c39565b82525050565b6000602082019050612d886000830184612d64565b92915050565b600080600060608486031215612da757612da6612ab9565b5b6000612db586828701612d0f565b9350506020612dc686828701612d0f565b9250506040612dd786828701612c5a565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612e2382612bcd565b810181811067ffffffffffffffff82111715612e4257612e41612deb565b5b80604052505050565b6000612e55612aaf565b9050612e618282612e1a565b919050565b600067ffffffffffffffff821115612e8157612e80612deb565b5b612e8a82612bcd565b9050602081019050919050565b82818337600083830152505050565b6000612eb9612eb484612e66565b612e4b565b905082815260208101848484011115612ed557612ed4612de6565b5b612ee0848285612e97565b509392505050565b600082601f830112612efd57612efc612de1565b5b8135612f0d848260208601612ea6565b91505092915050565b600060208284031215612f2c57612f2b612ab9565b5b600082013567ffffffffffffffff811115612f4a57612f49612abe565b5b612f5684828501612ee8565b91505092915050565b600060208284031215612f7557612f74612ab9565b5b6000612f8384828501612d0f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110612fcc57612fcb612f8c565b5b50565b6000819050612fdd82612fbb565b919050565b6000612fed82612fcf565b9050919050565b612ffd81612fe2565b82525050565b60006020820190506130186000830184612ff4565b92915050565b61302781612b48565b811461303257600080fd5b50565b6000813590506130448161301e565b92915050565b6000806040838503121561306157613060612ab9565b5b600061306f85828601612d0f565b925050602061308085828601613035565b9150509250929050565b600067ffffffffffffffff8211156130a5576130a4612deb565b5b6130ae82612bcd565b9050602081019050919050565b60006130ce6130c98461308a565b612e4b565b9050828152602081018484840111156130ea576130e9612de6565b5b6130f5848285612e97565b509392505050565b600082601f83011261311257613111612de1565b5b81356131228482602086016130bb565b91505092915050565b6000806000806080858703121561314557613144612ab9565b5b600061315387828801612d0f565b945050602061316487828801612d0f565b935050604061317587828801612c5a565b925050606085013567ffffffffffffffff81111561319657613195612abe565b5b6131a2878288016130fd565b91505092959194509250565b600080604083850312156131c5576131c4612ab9565b5b60006131d385828601612d0f565b92505060206131e485828601612d0f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061323557607f821691505b602082108103613248576132476131ee565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b60006132aa602c83612b89565b91506132b58261324e565b604082019050919050565b600060208201905081810360008301526132d98161329d565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061333c602183612b89565b9150613347826132e0565b604082019050919050565b6000602082019050818103600083015261336b8161332f565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b60006133ce603883612b89565b91506133d982613372565b604082019050919050565b600060208201905081810360008301526133fd816133c1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061343a602083612b89565b915061344582613404565b602082019050919050565b600060208201905081810360008301526134698161342d565b9050919050565b7f53686f756c6420626520696e20436f6e66696720737461676520746f20676f2060008201527f746f2050726573616c652e000000000000000000000000000000000000000000602082015250565b60006134cc602b83612b89565b91506134d782613470565b604082019050919050565b600060208201905081810360008301526134fb816134bf565b9050919050565b7f53686f756c6420626520696e2050726573616c6520737461676520746f20676f60008201527f20746f2053616c652e0000000000000000000000000000000000000000000000602082015250565b600061355e602983612b89565b915061356982613502565b604082019050919050565b6000602082019050818103600083015261358d81613551565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b60006135f0603183612b89565b91506135fb82613594565b604082019050919050565b6000602082019050818103600083015261361f816135e3565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000613682602b83612b89565b915061368d82613626565b604082019050919050565b600060208201905081810360008301526136b181613675565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006136ee601f83612b89565b91506136f9826136b8565b602082019050919050565b6000602082019050818103600083015261371d816136e1565b9050919050565b7f53616c6520686173206e6f742073746172746564207965742e00000000000000600082015250565b600061375a601983612b89565b915061376582613724565b602082019050919050565b600060208201905081810360008301526137898161374d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006137ca82612c39565b91506137d583612c39565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561380a57613809613790565b5b828201905092915050565b7f416c6c204e46542061726520736f6c6400000000000000000000000000000000600082015250565b600061384b601083612b89565b915061385682613815565b602082019050919050565b6000602082019050818103600083015261387a8161383e565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b60006138dd602c83612b89565b91506138e882613881565b604082019050919050565b6000602082019050818103600083015261390c816138d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f53686f756c6420626520696e20436f6e66696720737461676520746f2063686160008201527f6e6765207468652062617365205552492e000000000000000000000000000000602082015250565b600061399e603183612b89565b91506139a982613942565b604082019050919050565b600060208201905081810360008301526139cd81613991565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b6000613a30602983612b89565b9150613a3b826139d4565b604082019050919050565b60006020820190508181036000830152613a5f81613a23565b9050919050565b7f53686f756c6420626520696e20436f6e66696720737461676520746f2063686160008201527f6e676520746865206d617820737570706c792e00000000000000000000000000602082015250565b6000613ac2603383612b89565b9150613acd82613a66565b604082019050919050565b60006020820190508181036000830152613af181613ab5565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000613b54602a83612b89565b9150613b5f82613af8565b604082019050919050565b60006020820190508181036000830152613b8381613b47565b9050919050565b6000819050919050565b613ba5613ba082612c39565b613b8a565b82525050565b60008160601b9050919050565b6000613bc382613bab565b9050919050565b6000613bd582613bb8565b9050919050565b613bed613be882612cbc565b613bca565b82525050565b6000613bff8286613b94565b602082019150613c0f8285613b94565b602082019150613c1f8284613bdc565b601482019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613c6a82612c39565b9150613c7583612c39565b925082613c8557613c84613c30565b5b828206905092915050565b7f54686973204e465420646f65736e27742065786973742e000000000000000000600082015250565b6000613cc6601783612b89565b9150613cd182613c90565b602082019050919050565b60006020820190508181036000830152613cf581613cb9565b9050919050565b600081905092915050565b6000613d1282612b7e565b613d1c8185613cfc565b9350613d2c818560208601612b9a565b80840191505092915050565b60008190508160005260206000209050919050565b60008154613d5a8161321d565b613d648186613cfc565b94506001821660008114613d7f5760018114613d9057613dc3565b60ff19831686528186019350613dc3565b613d9985613d38565b60005b83811015613dbb57815481890152600182019150602081019050613d9c565b838801955050505b50505092915050565b6000613dd88286613d07565b9150613de48285613d07565b9150613df08284613d4d565b9150819050949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613e59602683612b89565b9150613e6482613dfd565b604082019050919050565b60006020820190508181036000830152613e8881613e4c565b9050919050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000613eeb602c83612b89565b9150613ef682613e8f565b604082019050919050565b60006020820190508181036000830152613f1a81613ede565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000613f7d602583612b89565b9150613f8882613f21565b604082019050919050565b60006020820190508181036000830152613fac81613f70565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061400f602483612b89565b915061401a82613fb3565b604082019050919050565b6000602082019050818103600083015261403e81614002565b9050919050565b600061405082612c39565b915061405b83612c39565b92508282101561406e5761406d613790565b5b828203905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006140af601983612b89565b91506140ba82614079565b602082019050919050565b600060208201905081810360008301526140de816140a2565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000614141603283612b89565b915061414c826140e5565b604082019050919050565b6000602082019050818103600083015261417081614134565b9050919050565b600061418282612c39565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036141b4576141b3613790565b5b600182019050919050565b60006141ca82612c39565b91506141d583612c39565b9250826141e5576141e4613c30565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b6000614217826141f0565b61422181856141fb565b9350614231818560208601612b9a565b61423a81612bcd565b840191505092915050565b600060808201905061425a6000830187612cce565b6142676020830186612cce565b6142746040830185612d64565b8181036060830152614286818461420c565b905095945050505050565b6000815190506142a081612aef565b92915050565b6000602082840312156142bc576142bb612ab9565b5b60006142ca84828501614291565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000614338602083612b89565b915061434382614302565b602082019050919050565b600060208201905081810360008301526143678161432b565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b60006143a4601c83612b89565b91506143af8261436e565b602082019050919050565b600060208201905081810360008301526143d381614397565b905091905056fea26469706673582212206d5ce140318d7ffe4ca8a14b97f460dd92f215db16931b0d4b8fbe3bd555ca0b64736f6c634300080d0033a264697066735822122020984145bf447c12643384884ba103e407664498620d54926cae9afeb1e0417164736f6c634300080d0033",
  "deployedBytecode": "0x7300000000000000000000000000000000000000003014608060405260043610620000375760003560e01c80639436e1d8146200003c575b600080fd5b8180156200004957600080fd5b50620000686004803603810190620000629190620002de565b62000080565b604051620000779190620003a8565b60405180910390f35b6000806200008f8484620000de565b9050600084604051602001620000a6919062000448565b604051602081830303815290604052805190602001209050808251602084016000f59250823b620000d657600080fd5b505092915050565b6060600060405180602001620000f4906200015a565b6020820181038252601f19601f82011660405250905080848460405160200162000120929190620004b3565b604051602081830303815290604052604051602001620001429291906200053b565b60405160208183030381529060405291505092915050565b61496c806200056483390190565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001d18262000186565b810181811067ffffffffffffffff82111715620001f357620001f262000197565b5b80604052505050565b60006200020862000168565b9050620002168282620001c6565b919050565b600067ffffffffffffffff82111562000239576200023862000197565b5b620002448262000186565b9050602081019050919050565b82818337600083830152505050565b60006200027762000271846200021b565b620001fc565b90508281526020810184848401111562000296576200029562000181565b5b620002a384828562000251565b509392505050565b600082601f830112620002c357620002c26200017c565b5b8135620002d584826020860162000260565b91505092915050565b60008060408385031215620002f857620002f762000172565b5b600083013567ffffffffffffffff81111562000319576200031862000177565b5b6200032785828601620002ab565b925050602083013567ffffffffffffffff8111156200034b576200034a62000177565b5b6200035985828601620002ab565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003908262000363565b9050919050565b620003a28162000383565b82525050565b6000602082019050620003bf600083018462000397565b92915050565b600081519050919050565b600081905092915050565b60005b83811015620003fb578082015181840152602081019050620003de565b838111156200040b576000848401525b50505050565b60006200041e82620003c5565b6200042a8185620003d0565b93506200043c818560208601620003db565b80840191505092915050565b600062000456828462000411565b915081905092915050565b600082825260208201905092915050565b60006200047f82620003c5565b6200048b818562000461565b93506200049d818560208601620003db565b620004a88162000186565b840191505092915050565b60006040820190508181036000830152620004cf818562000472565b90508181036020830152620004e5818462000472565b90509392505050565b600081519050919050565b600081905092915050565b60006200051182620004ee565b6200051d8185620004f9565b93506200052f818560208601620003db565b80840191505092915050565b600062000549828562000504565b915062000557828462000504565b9150819050939250505056fe60806040526040518060400160405280600581526020017f2e6a736f6e000000000000000000000000000000000000000000000000000000815250600f908051906020019062000051929190620001e7565b503480156200005f57600080fd5b506040516200496c3803806200496c833981810160405281019062000085919062000434565b818181600090805190602001906200009f929190620001e7565b508060019080519060200190620000b8929190620001e7565b505050620000db620000cf6200011960201b60201c565b6200012160201b60201c565b6001600b819055506000601160006101000a81548160ff021916908360048111156200010c576200010b620004b9565b5b021790555050506200054c565b600033905090565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001f59062000517565b90600052602060002090601f01602090048101928262000219576000855562000265565b82601f106200023457805160ff191683800117855562000265565b8280016001018555821562000265579182015b828111156200026457825182559160200191906001019062000247565b5b50905062000274919062000278565b5090565b5b808211156200029357600081600090555060010162000279565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200030082620002b5565b810181811067ffffffffffffffff82111715620003225762000321620002c6565b5b80604052505050565b60006200033762000297565b9050620003458282620002f5565b919050565b600067ffffffffffffffff821115620003685762000367620002c6565b5b6200037382620002b5565b9050602081019050919050565b60005b83811015620003a057808201518184015260208101905062000383565b83811115620003b0576000848401525b50505050565b6000620003cd620003c7846200034a565b6200032b565b905082815260208101848484011115620003ec57620003eb620002b0565b5b620003f984828562000380565b509392505050565b600082601f830112620004195762000418620002ab565b5b81516200042b848260208601620003b6565b91505092915050565b600080604083850312156200044e576200044d620002a1565b5b600083015167ffffffffffffffff8111156200046f576200046e620002a6565b5b6200047d8582860162000401565b925050602083015167ffffffffffffffff811115620004a157620004a0620002a6565b5b620004af8582860162000401565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200053057607f821691505b602082108103620005465762000545620004e8565b5b50919050565b614410806200055c6000396000f3fe60806040526004361061013c5760003560e01c806301ffc9a71461014157806306fdde031461017e578063081812fc146101a9578063095ea7b3146101e657806315c316fc1461020f57806318160ddd146102265780631f2898c31461025157806323b872dd146102685780632f745c591461029157806342842e0e146102ce57806345749ca4146102f75780634f6ccce71461031557806355f804b3146103525780636352211e1461037b5780636f8b44b0146103b857806370a08231146103e1578063715018a61461041e5780638da5cb5b1461043557806391efcf701461046057806395d89b411461048b578063a22cb465146104b6578063b863bd37146104df578063b88d4fde1461051c578063c87b56dd14610545578063da3ef23f14610582578063e985e9c5146105ab578063f2fde38b146105e8575b600080fd5b34801561014d57600080fd5b5061016860048036038101906101639190612b1b565b610611565b6040516101759190612b63565b60405180910390f35b34801561018a57600080fd5b5061019361068b565b6040516101a09190612c17565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb9190612c6f565b61071d565b6040516101dd9190612cdd565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190612d24565b6107a2565b005b34801561021b57600080fd5b506102246108b9565b005b34801561023257600080fd5b5061023b6109d8565b6040516102489190612d73565b60405180910390f35b34801561025d57600080fd5b506102666109e5565b005b34801561027457600080fd5b5061028f600480360381019061028a9190612d8e565b610b04565b005b34801561029d57600080fd5b506102b860048036038101906102b39190612d24565b610b64565b6040516102c59190612d73565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f09190612d8e565b610c09565b005b6102ff610c29565b60405161030c9190612d73565b60405180910390f35b34801561032157600080fd5b5061033c60048036038101906103379190612c6f565b610e5a565b6040516103499190612d73565b60405180910390f35b34801561035e57600080fd5b5061037960048036038101906103749190612f16565b610ecb565b005b34801561038757600080fd5b506103a2600480360381019061039d9190612c6f565b610fd7565b6040516103af9190612cdd565b60405180910390f35b3480156103c457600080fd5b506103df60048036038101906103da9190612c6f565b611088565b005b3480156103ed57600080fd5b5061040860048036038101906104039190612f5f565b611184565b6040516104159190612d73565b60405180910390f35b34801561042a57600080fd5b5061043361123b565b005b34801561044157600080fd5b5061044a6112c3565b6040516104579190612cdd565b60405180910390f35b34801561046c57600080fd5b506104756112ed565b6040516104829190613003565b60405180910390f35b34801561049757600080fd5b506104a0611300565b6040516104ad9190612c17565b60405180910390f35b3480156104c257600080fd5b506104dd60048036038101906104d8919061304a565b611392565b005b3480156104eb57600080fd5b5061050660048036038101906105019190612c6f565b6113a8565b6040516105139190612d73565b60405180910390f35b34801561052857600080fd5b50610543600480360381019061053e919061312b565b6113ea565b005b34801561055157600080fd5b5061056c60048036038101906105679190612c6f565b61144c565b6040516105799190612c17565b60405180910390f35b34801561058e57600080fd5b506105a960048036038101906105a49190612f16565b6114f6565b005b3480156105b757600080fd5b506105d260048036038101906105cd91906131ae565b611602565b6040516105df9190612b63565b60405180910390f35b3480156105f457600080fd5b5061060f600480360381019061060a9190612f5f565b611696565b005b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061068457506106838261178d565b5b9050919050565b60606000805461069a9061321d565b80601f01602080910402602001604051908101604052809291908181526020018280546106c69061321d565b80156107135780601f106106e857610100808354040283529160200191610713565b820191906000526020600020905b8154815290600101906020018083116106f657829003601f168201915b5050505050905090565b60006107288261186f565b610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e906132c0565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107ad82610fd7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490613352565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661083c6118db565b73ffffffffffffffffffffffffffffffffffffffff16148061086b575061086a816108656118db565b611602565b5b6108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a1906133e4565b60405180910390fd5b6108b483836118e3565b505050565b6108c16118db565b73ffffffffffffffffffffffffffffffffffffffff166108df6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90613450565b60405180910390fd5b6000600481111561094957610948612f8c565b5b601160009054906101000a900460ff16600481111561096b5761096a612f8c565b5b146109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a2906134e2565b60405180910390fd5b6001601160006101000a81548160ff021916908360048111156109d1576109d0612f8c565b5b0217905550565b6000600880549050905090565b6109ed6118db565b73ffffffffffffffffffffffffffffffffffffffff16610a0b6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614610a61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5890613450565b60405180910390fd5b60016004811115610a7557610a74612f8c565b5b601160009054906101000a900460ff166004811115610a9757610a96612f8c565b5b14610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace90613574565b60405180910390fd5b6002601160006101000a81548160ff02191690836004811115610afd57610afc612f8c565b5b0217905550565b610b15610b0f6118db565b8261199c565b610b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4b90613606565b60405180910390fd5b610b5f838383611a7a565b505050565b6000610b6f83611184565b8210610bb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba790613698565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610c24838383604051806020016040528060008152506113ea565b505050565b60006002600b5403610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790613704565b60405180910390fd5b6002600b8190555060026004811115610c8c57610c8b612f8c565b5b601160009054906101000a900460ff166004811115610cae57610cad612f8c565b5b14610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce590613770565b60405180910390fd5b600d546001610cfb6109d8565b610d0591906137bf565b10610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90613861565b60405180910390fd5b610d4f600c611ce0565b6000610d5b60646113a8565b90506000610d69600c611cf6565b905060006010600083815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060006010600083815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506003821015610e065760016010600083815260200190815260200160002060000160016101000a81548160ff021916908315150217905550610e40565b600a821015610e3f5760016010600083815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b5b610e4a3382611d04565b80925050506001600b8190555090565b6000610e646109d8565b8210610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c906138f3565b60405180910390fd5b60088281548110610eb957610eb8613913565b5b90600052602060002001549050919050565b610ed36118db565b73ffffffffffffffffffffffffffffffffffffffff16610ef16112c3565b73ffffffffffffffffffffffffffffffffffffffff1614610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90613450565b60405180910390fd5b60006004811115610f5b57610f5a612f8c565b5b601160009054906101000a900460ff166004811115610f7d57610f7c612f8c565b5b14610fbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb4906139b4565b60405180910390fd5b80600e9080519060200190610fd3929190612a0c565b5050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690613a46565b60405180910390fd5b80915050919050565b6110906118db565b73ffffffffffffffffffffffffffffffffffffffff166110ae6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614611104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fb90613450565b60405180910390fd5b6000600481111561111857611117612f8c565b5b601160009054906101000a900460ff16600481111561113a57611139612f8c565b5b1461117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117190613ad8565b60405180910390fd5b80600d8190555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111eb90613b6a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112436118db565b73ffffffffffffffffffffffffffffffffffffffff166112616112c3565b73ffffffffffffffffffffffffffffffffffffffff16146112b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ae90613450565b60405180910390fd5b6112c16000611d22565b565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b601160009054906101000a900460ff1681565b60606001805461130f9061321d565b80601f016020809104026020016040519081016040528092919081815260200182805461133b9061321d565b80156113885780601f1061135d57610100808354040283529160200191611388565b820191906000526020600020905b81548152906001019060200180831161136b57829003601f168201915b5050505050905090565b6113a461139d6118db565b8383611de8565b5050565b6000814244336040516020016113c093929190613bf3565b6040516020818303038152906040528051906020012060001c6113e39190613c5f565b9050919050565b6113fb6113f56118db565b8361199c565b61143a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143190613606565b60405180910390fd5b61144684848484611f54565b50505050565b60606114578261186f565b611496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148d90613cdc565b60405180910390fd5b60006114a0611fb0565b905060008151116114c057604051806020016040528060008152506114ee565b806114ca84612042565b600f6040516020016114de93929190613dcc565b6040516020818303038152906040525b915050919050565b6114fe6118db565b73ffffffffffffffffffffffffffffffffffffffff1661151c6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614611572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156990613450565b60405180910390fd5b6000600481111561158657611585612f8c565b5b601160009054906101000a900460ff1660048111156115a8576115a7612f8c565b5b146115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df906139b4565b60405180910390fd5b80600f90805190602001906115fe929190612a0c565b5050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61169e6118db565b73ffffffffffffffffffffffffffffffffffffffff166116bc6112c3565b73ffffffffffffffffffffffffffffffffffffffff1614611712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170990613450565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177890613e6f565b60405180910390fd5b61178a81611d22565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061185857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806118685750611867826121a2565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661195683610fd7565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006119a78261186f565b6119e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119dd90613f01565b60405180910390fd5b60006119f183610fd7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a6057508373ffffffffffffffffffffffffffffffffffffffff16611a488461071d565b73ffffffffffffffffffffffffffffffffffffffff16145b80611a715750611a708185611602565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611a9a82610fd7565b73ffffffffffffffffffffffffffffffffffffffff1614611af0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ae790613f93565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5690614025565b60405180910390fd5b611b6a83838361220c565b611b756000826118e3565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611bc59190614045565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c1c91906137bf565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611cdb83838361231e565b505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b611d1e828260405180602001604052806000815250612323565b5050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4d906140c5565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611f479190612b63565b60405180910390a3505050565b611f5f848484611a7a565b611f6b8484848461237e565b611faa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa190614157565b60405180910390fd5b50505050565b6060600e8054611fbf9061321d565b80601f0160208091040260200160405190810160405280929190818152602001828054611feb9061321d565b80156120385780601f1061200d57610100808354040283529160200191612038565b820191906000526020600020905b81548152906001019060200180831161201b57829003601f168201915b5050505050905090565b606060008203612089576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061219d565b600082905060005b600082146120bb5780806120a490614177565b915050600a826120b491906141bf565b9150612091565b60008167ffffffffffffffff8111156120d7576120d6612deb565b5b6040519080825280601f01601f1916602001820160405280156121095781602001600182028036833780820191505090505b5090505b60008514612196576001826121229190614045565b9150600a856121319190613c5f565b603061213d91906137bf565b60f81b81838151811061215357612152613913565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561218f91906141bf565b945061210d565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b612217838383612505565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612259576122548161250a565b612298565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612297576122968382612553565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036122da576122d5816126c0565b612319565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612318576123178282612791565b5b5b505050565b505050565b61232d8383612810565b61233a600084848461237e565b612379576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237090614157565b60405180910390fd5b505050565b600061239f8473ffffffffffffffffffffffffffffffffffffffff166129e9565b156124f8578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026123c86118db565b8786866040518563ffffffff1660e01b81526004016123ea9493929190614245565b6020604051808303816000875af192505050801561242657506040513d601f19601f8201168201806040525081019061242391906142a6565b60015b6124a8573d8060008114612456576040519150601f19603f3d011682016040523d82523d6000602084013e61245b565b606091505b5060008151036124a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249790614157565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506124fd565b600190505b949350505050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000600161256084611184565b61256a9190614045565b905060006007600084815260200190815260200160002054905081811461264f576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506126d49190614045565b905060006009600084815260200190815260200160002054905060006008838154811061270457612703613913565b5b90600052602060002001549050806008838154811061272657612725613913565b5b906000526020600020018190555081600960008381526020019081526020016000208190555060096000858152602001908152602001600020600090556008805480612775576127746142d3565b5b6001900381819060005260206000200160009055905550505050565b600061279c83611184565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361287f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128769061434e565b60405180910390fd5b6128888161186f565b156128c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128bf906143ba565b60405180910390fd5b6128d46000838361220c565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461292491906137bf565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46129e56000838361231e565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b828054612a189061321d565b90600052602060002090601f016020900481019282612a3a5760008555612a81565b82601f10612a5357805160ff1916838001178555612a81565b82800160010185558215612a81579182015b82811115612a80578251825591602001919060010190612a65565b5b509050612a8e9190612a92565b5090565b5b80821115612aab576000816000905550600101612a93565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612af881612ac3565b8114612b0357600080fd5b50565b600081359050612b1581612aef565b92915050565b600060208284031215612b3157612b30612ab9565b5b6000612b3f84828501612b06565b91505092915050565b60008115159050919050565b612b5d81612b48565b82525050565b6000602082019050612b786000830184612b54565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612bb8578082015181840152602081019050612b9d565b83811115612bc7576000848401525b50505050565b6000601f19601f8301169050919050565b6000612be982612b7e565b612bf38185612b89565b9350612c03818560208601612b9a565b612c0c81612bcd565b840191505092915050565b60006020820190508181036000830152612c318184612bde565b905092915050565b6000819050919050565b612c4c81612c39565b8114612c5757600080fd5b50565b600081359050612c6981612c43565b92915050565b600060208284031215612c8557612c84612ab9565b5b6000612c9384828501612c5a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cc782612c9c565b9050919050565b612cd781612cbc565b82525050565b6000602082019050612cf26000830184612cce565b92915050565b612d0181612cbc565b8114612d0c57600080fd5b50565b600081359050612d1e81612cf8565b92915050565b60008060408385031215612d3b57612d3a612ab9565b5b6000612d4985828601612d0f565b9250506020612d5a85828601612c5a565b9150509250929050565b612d6d81612c39565b82525050565b6000602082019050612d886000830184612d64565b92915050565b600080600060608486031215612da757612da6612ab9565b5b6000612db586828701612d0f565b9350506020612dc686828701612d0f565b9250506040612dd786828701612c5a565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612e2382612bcd565b810181811067ffffffffffffffff82111715612e4257612e41612deb565b5b80604052505050565b6000612e55612aaf565b9050612e618282612e1a565b919050565b600067ffffffffffffffff821115612e8157612e80612deb565b5b612e8a82612bcd565b9050602081019050919050565b82818337600083830152505050565b6000612eb9612eb484612e66565b612e4b565b905082815260208101848484011115612ed557612ed4612de6565b5b612ee0848285612e97565b509392505050565b600082601f830112612efd57612efc612de1565b5b8135612f0d848260208601612ea6565b91505092915050565b600060208284031215612f2c57612f2b612ab9565b5b600082013567ffffffffffffffff811115612f4a57612f49612abe565b5b612f5684828501612ee8565b91505092915050565b600060208284031215612f7557612f74612ab9565b5b6000612f8384828501612d0f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110612fcc57612fcb612f8c565b5b50565b6000819050612fdd82612fbb565b919050565b6000612fed82612fcf565b9050919050565b612ffd81612fe2565b82525050565b60006020820190506130186000830184612ff4565b92915050565b61302781612b48565b811461303257600080fd5b50565b6000813590506130448161301e565b92915050565b6000806040838503121561306157613060612ab9565b5b600061306f85828601612d0f565b925050602061308085828601613035565b9150509250929050565b600067ffffffffffffffff8211156130a5576130a4612deb565b5b6130ae82612bcd565b9050602081019050919050565b60006130ce6130c98461308a565b612e4b565b9050828152602081018484840111156130ea576130e9612de6565b5b6130f5848285612e97565b509392505050565b600082601f83011261311257613111612de1565b5b81356131228482602086016130bb565b91505092915050565b6000806000806080858703121561314557613144612ab9565b5b600061315387828801612d0f565b945050602061316487828801612d0f565b935050604061317587828801612c5a565b925050606085013567ffffffffffffffff81111561319657613195612abe565b5b6131a2878288016130fd565b91505092959194509250565b600080604083850312156131c5576131c4612ab9565b5b60006131d385828601612d0f565b92505060206131e485828601612d0f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061323557607f821691505b602082108103613248576132476131ee565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b60006132aa602c83612b89565b91506132b58261324e565b604082019050919050565b600060208201905081810360008301526132d98161329d565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061333c602183612b89565b9150613347826132e0565b604082019050919050565b6000602082019050818103600083015261336b8161332f565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b60006133ce603883612b89565b91506133d982613372565b604082019050919050565b600060208201905081810360008301526133fd816133c1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061343a602083612b89565b915061344582613404565b602082019050919050565b600060208201905081810360008301526134698161342d565b9050919050565b7f53686f756c6420626520696e20436f6e66696720737461676520746f20676f2060008201527f746f2050726573616c652e000000000000000000000000000000000000000000602082015250565b60006134cc602b83612b89565b91506134d782613470565b604082019050919050565b600060208201905081810360008301526134fb816134bf565b9050919050565b7f53686f756c6420626520696e2050726573616c6520737461676520746f20676f60008201527f20746f2053616c652e0000000000000000000000000000000000000000000000602082015250565b600061355e602983612b89565b915061356982613502565b604082019050919050565b6000602082019050818103600083015261358d81613551565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b60006135f0603183612b89565b91506135fb82613594565b604082019050919050565b6000602082019050818103600083015261361f816135e3565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000613682602b83612b89565b915061368d82613626565b604082019050919050565b600060208201905081810360008301526136b181613675565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006136ee601f83612b89565b91506136f9826136b8565b602082019050919050565b6000602082019050818103600083015261371d816136e1565b9050919050565b7f53616c6520686173206e6f742073746172746564207965742e00000000000000600082015250565b600061375a601983612b89565b915061376582613724565b602082019050919050565b600060208201905081810360008301526137898161374d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006137ca82612c39565b91506137d583612c39565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561380a57613809613790565b5b828201905092915050565b7f416c6c204e46542061726520736f6c6400000000000000000000000000000000600082015250565b600061384b601083612b89565b915061385682613815565b602082019050919050565b6000602082019050818103600083015261387a8161383e565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b60006138dd602c83612b89565b91506138e882613881565b604082019050919050565b6000602082019050818103600083015261390c816138d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f53686f756c6420626520696e20436f6e66696720737461676520746f2063686160008201527f6e6765207468652062617365205552492e000000000000000000000000000000602082015250565b600061399e603183612b89565b91506139a982613942565b604082019050919050565b600060208201905081810360008301526139cd81613991565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b6000613a30602983612b89565b9150613a3b826139d4565b604082019050919050565b60006020820190508181036000830152613a5f81613a23565b9050919050565b7f53686f756c6420626520696e20436f6e66696720737461676520746f2063686160008201527f6e676520746865206d617820737570706c792e00000000000000000000000000602082015250565b6000613ac2603383612b89565b9150613acd82613a66565b604082019050919050565b60006020820190508181036000830152613af181613ab5565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000613b54602a83612b89565b9150613b5f82613af8565b604082019050919050565b60006020820190508181036000830152613b8381613b47565b9050919050565b6000819050919050565b613ba5613ba082612c39565b613b8a565b82525050565b60008160601b9050919050565b6000613bc382613bab565b9050919050565b6000613bd582613bb8565b9050919050565b613bed613be882612cbc565b613bca565b82525050565b6000613bff8286613b94565b602082019150613c0f8285613b94565b602082019150613c1f8284613bdc565b601482019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613c6a82612c39565b9150613c7583612c39565b925082613c8557613c84613c30565b5b828206905092915050565b7f54686973204e465420646f65736e27742065786973742e000000000000000000600082015250565b6000613cc6601783612b89565b9150613cd182613c90565b602082019050919050565b60006020820190508181036000830152613cf581613cb9565b9050919050565b600081905092915050565b6000613d1282612b7e565b613d1c8185613cfc565b9350613d2c818560208601612b9a565b80840191505092915050565b60008190508160005260206000209050919050565b60008154613d5a8161321d565b613d648186613cfc565b94506001821660008114613d7f5760018114613d9057613dc3565b60ff19831686528186019350613dc3565b613d9985613d38565b60005b83811015613dbb57815481890152600182019150602081019050613d9c565b838801955050505b50505092915050565b6000613dd88286613d07565b9150613de48285613d07565b9150613df08284613d4d565b9150819050949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613e59602683612b89565b9150613e6482613dfd565b604082019050919050565b60006020820190508181036000830152613e8881613e4c565b9050919050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000613eeb602c83612b89565b9150613ef682613e8f565b604082019050919050565b60006020820190508181036000830152613f1a81613ede565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000613f7d602583612b89565b9150613f8882613f21565b604082019050919050565b60006020820190508181036000830152613fac81613f70565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061400f602483612b89565b915061401a82613fb3565b604082019050919050565b6000602082019050818103600083015261403e81614002565b9050919050565b600061405082612c39565b915061405b83612c39565b92508282101561406e5761406d613790565b5b828203905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006140af601983612b89565b91506140ba82614079565b602082019050919050565b600060208201905081810360008301526140de816140a2565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000614141603283612b89565b915061414c826140e5565b604082019050919050565b6000602082019050818103600083015261417081614134565b9050919050565b600061418282612c39565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036141b4576141b3613790565b5b600182019050919050565b60006141ca82612c39565b91506141d583612c39565b9250826141e5576141e4613c30565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b6000614217826141f0565b61422181856141fb565b9350614231818560208601612b9a565b61423a81612bcd565b840191505092915050565b600060808201905061425a6000830187612cce565b6142676020830186612cce565b6142746040830185612d64565b8181036060830152614286818461420c565b905095945050505050565b6000815190506142a081612aef565b92915050565b6000602082840312156142bc576142bb612ab9565b5b60006142ca84828501614291565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000614338602083612b89565b915061434382614302565b602082019050919050565b600060208201905081810360008301526143678161432b565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b60006143a4601c83612b89565b91506143af8261436e565b602082019050919050565b600060208201905081810360008301526143d381614397565b905091905056fea26469706673582212206d5ce140318d7ffe4ca8a14b97f460dd92f215db16931b0d4b8fbe3bd555ca0b64736f6c634300080d0033a264697066735822122020984145bf447c12643384884ba103e407664498620d54926cae9afeb1e0417164736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7365:19",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:19",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:19",
                "type": ""
              }
            ],
            "src": "7:75:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:19",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:19"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:19",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:19"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "423:28:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:1:19",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "433:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:12:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "433:12:19"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "334:117:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "546:28:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "563:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "566:1:19",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "556:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:12:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:12:19"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "457:117:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "628:54:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "638:38:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "656:5:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "663:2:19",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "652:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "652:14:19"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "672:2:19",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "668:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "668:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "648:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:28:19"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "611:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "621:6:19",
                "type": ""
              }
            ],
            "src": "580:102:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "716:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "733:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "736:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "726:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "726:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "726:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "830:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:4:19",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "823:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "823:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "823:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "854:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "857:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "847:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "847:15:19"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "688:180:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:238:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "927:58:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "949:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "979:4:19"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "957:21:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "957:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "945:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "945:40:19"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "931:10:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1096:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1098:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1098:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1098:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1039:10:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1051:18:19",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1036:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:34:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1075:10:19"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1087:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1072:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1033:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1033:62:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1030:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1134:2:19",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1138:10:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1127:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1127:22:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1127:22:19"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "903:6:19",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "911:4:19",
                "type": ""
              }
            ],
            "src": "874:281:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:88:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:30:19",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "1222:18:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:20:19"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1212:6:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1271:6:19"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1279:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "1251:19:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:33:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:33:19"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1186:4:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1195:6:19",
                "type": ""
              }
            ],
            "src": "1161:129:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1363:241:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1468:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1470:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1470:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1470:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1440:6:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1437:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1437:30:19"
                  },
                  "nodeType": "YulIf",
                  "src": "1434:56:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1500:37:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1530:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "1508:21:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:29:19"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1500:4:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1574:23:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1586:4:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:4:19",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1582:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:15:19"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1574:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1347:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1358:4:19",
                "type": ""
              }
            ],
            "src": "1296:308:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1661:103:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "1684:3:19"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "1689:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1694:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1671:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1671:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "1742:3:19"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1747:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1738:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1738:16:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1756:1:19",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1731:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1731:27:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1731:27:19"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1643:3:19",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1648:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1653:6:19",
                "type": ""
              }
            ],
            "src": "1610:154:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1854:328:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1864:75:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1931:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1889:41:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1889:49:19"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1873:15:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:66:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1864:5:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1955:5:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1962:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1948:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1948:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1948:21:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1978:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1993:5:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2000:4:19",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1989:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:16:19"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "1982:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2043:83:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "2045:77:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2045:79:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2045:79:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2024:3:19"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2029:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2020:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2020:16:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2038:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2017:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2017:25:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2014:112:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2159:3:19"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2164:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2169:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2135:23:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:41:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2135:41:19"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1827:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1832:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1840:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1848:5:19",
                "type": ""
              }
            ],
            "src": "1770:412:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2264:278:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2313:83:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "2315:77:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2315:79:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2315:79:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2292:6:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2300:4:19",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2288:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2288:17:19"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2307:3:19"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2284:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2284:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2274:122:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2405:34:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2432:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2419:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2419:20:19"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2409:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2448:88:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2509:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2517:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2505:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2505:17:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2524:6:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2532:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2457:47:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:79:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2448:5:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2242:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2250:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2258:5:19",
                "type": ""
              }
            ],
            "src": "2202:340:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2651:731:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2697:83:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2699:77:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2699:79:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2699:79:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2672:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2681:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2668:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2668:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2693:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2664:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2661:119:19"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2790:287:19",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2805:45:19",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2836:9:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2847:1:19",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2832:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2832:17:19"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2819:12:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2819:31:19"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2809:6:19",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2897:83:19",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "2899:77:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2899:79:19"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2899:79:19"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2869:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2877:18:19",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2866:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2866:30:19"
                      },
                      "nodeType": "YulIf",
                      "src": "2863:117:19"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2994:73:19",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3039:9:19"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3050:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3035:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3035:22:19"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3059:7:19"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3004:30:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3004:63:19"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2994:6:19"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3087:288:19",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3102:46:19",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3133:9:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3144:2:19",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3129:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3129:18:19"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3116:12:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3116:32:19"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3106:6:19",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3195:83:19",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "3197:77:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3197:79:19"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3197:79:19"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3167:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3175:18:19",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3164:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3164:30:19"
                      },
                      "nodeType": "YulIf",
                      "src": "3161:117:19"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3292:73:19",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3337:9:19"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3348:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3333:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3333:22:19"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3357:7:19"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3302:30:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3302:63:19"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3292:6:19"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2613:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2624:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2636:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2644:6:19",
                "type": ""
              }
            ],
            "src": "2548:834:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3433:81:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3443:65:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3458:5:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3465:42:19",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3454:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3454:54:19"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3443:7:19"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3415:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3425:7:19",
                "type": ""
              }
            ],
            "src": "3388:126:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3565:51:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3575:35:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3604:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3586:17:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3586:24:19"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3575:7:19"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3547:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3557:7:19",
                "type": ""
              }
            ],
            "src": "3520:96:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3695:53:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3712:3:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3735:5:19"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3717:17:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3717:24:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3705:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3705:37:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3705:37:19"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack_library",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3683:5:19",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3690:3:19",
                "type": ""
              }
            ],
            "src": "3622:126:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3860:132:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3870:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3882:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3893:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3878:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3870:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3958:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3971:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3982:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3967:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3967:17:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack_library",
                      "nodeType": "YulIdentifier",
                      "src": "3906:51:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3906:79:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3906:79:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3832:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3844:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3855:4:19",
                "type": ""
              }
            ],
            "src": "3754:238:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4057:40:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4068:22:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4084:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4078:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4078:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4068:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4040:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4050:6:19",
                "type": ""
              }
            ],
            "src": "3998:99:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4217:34:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4227:18:19",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4242:3:19"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4227:11:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4189:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4194:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4205:11:19",
                "type": ""
              }
            ],
            "src": "4103:148:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4306:258:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4316:10:19",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4325:1:19",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4320:1:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4385:63:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4410:3:19"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4415:1:19"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4406:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4406:11:19"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "4429:3:19"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4434:1:19"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4425:3:19"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4425:11:19"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4419:5:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4419:18:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4399:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4399:39:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4399:39:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4346:1:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4349:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4343:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4343:13:19"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4357:19:19",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4359:15:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4368:1:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4371:2:19",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4364:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4364:10:19"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4359:1:19"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4339:3:19",
                    "statements": []
                  },
                  "src": "4335:113:19"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4482:76:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4532:3:19"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4537:6:19"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4528:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4528:16:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4546:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4521:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4521:27:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4521:27:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4463:1:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4466:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4460:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4460:13:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4457:101:19"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4288:3:19",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4293:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4298:6:19",
                "type": ""
              }
            ],
            "src": "4257:307:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4680:267:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4690:53:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4737:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4704:32:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4704:39:19"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4694:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4752:96:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4836:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4841:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4759:76:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4759:89:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4752:3:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4883:5:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4890:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4879:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4879:16:19"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4897:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4902:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4857:21:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4857:52:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4857:52:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4918:23:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4929:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4934:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4925:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4925:16:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4918:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4661:5:19",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4668:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4676:3:19",
                "type": ""
              }
            ],
            "src": "4570:377:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5089:139:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5100:102:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5189:6:19"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5198:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5107:81:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5107:95:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5100:3:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5212:10:19",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5219:3:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5212:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5068:3:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5074:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5085:3:19",
                "type": ""
              }
            ],
            "src": "4953:275:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5330:73:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5347:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5352:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5340:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5340:19:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5340:19:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5368:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5387:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5392:4:19",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5383:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5383:14:19"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5368:11:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5302:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5307:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5318:11:19",
                "type": ""
              }
            ],
            "src": "5234:169:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5501:272:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5511:53:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5558:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5525:32:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5525:39:19"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5515:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5573:78:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5639:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5644:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5580:58:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5580:71:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5573:3:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5686:5:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5693:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5682:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5682:16:19"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5700:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5705:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5660:21:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5660:52:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5660:52:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5721:46:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5732:3:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5759:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5737:21:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5737:29:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5728:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5728:39:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5721:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5482:5:19",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5489:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5497:3:19",
                "type": ""
              }
            ],
            "src": "5409:364:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5945:348:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5955:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5967:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5978:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5963:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5963:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5955:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6002:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6013:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5998:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5998:17:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6021:4:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6027:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6017:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6017:20:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5991:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5991:47:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5991:47:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6047:86:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6119:6:19"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6128:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6055:63:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6055:78:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6047:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6154:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6165:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6150:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6150:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6174:4:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6180:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6170:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6170:20:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6143:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6143:48:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6143:48:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6200:86:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6272:6:19"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6281:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6208:63:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6208:78:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6200:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5909:9:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5921:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5929:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5940:4:19",
                "type": ""
              }
            ],
            "src": "5779:514:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6357:40:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6368:22:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6384:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6378:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6368:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6340:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6350:6:19",
                "type": ""
              }
            ],
            "src": "6299:98:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6516:34:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6526:18:19",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6541:3:19"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6526:11:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6488:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6493:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6504:11:19",
                "type": ""
              }
            ],
            "src": "6403:147:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6664:265:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6674:52:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6720:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6688:31:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6688:38:19"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6678:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6735:95:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6818:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6823:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6742:75:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6742:88:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6735:3:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6865:5:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6872:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6861:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6861:16:19"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6879:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6884:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6839:21:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6839:52:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6839:52:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6900:23:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6911:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6916:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6907:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6907:16:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6900:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6645:5:19",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6652:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6660:3:19",
                "type": ""
              }
            ],
            "src": "6556:373:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7115:247:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7126:100:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7213:6:19"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7222:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7133:79:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7133:93:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7126:3:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7236:100:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7323:6:19"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7332:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7243:79:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7243:93:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7236:3:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7346:10:19",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7353:3:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7346:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7086:3:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7092:6:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7100:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7111:3:19",
                "type": ""
              }
            ],
            "src": "6935:427:19"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "203:1506:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "203:1506:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;903:803;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1014:25;1110:31;1144:55;1164:15;1181:17;1144:19;:55::i;:::-;1110:89;;1262:12;1304:15;1287:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;1277:44;;;;;;1262:59;;1448:4;1427:18;1421:25;1414:4;1394:18;1390:29;1387:1;1379:74;1358:95;;1489:17;1477:30;1467:186;;1636:1;1633;1626:12;1467:186;1674:24;;903:803;;;;:::o;391:285::-;498:12;523:21;547:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;523:59;;619:8;640:11;653:13;629:38;;;;;;;;;:::i;:::-;;;;;;;;;;;;;602:66;;;;;;;;;:::i;:::-;;;;;;;;;;;;;595:73;;;391:285;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:154::-;1694:6;1689:3;1684;1671:30;1756:1;1747:6;1742:3;1738:16;1731:27;1610:154;;;:::o;1770:412::-;1848:5;1873:66;1889:49;1931:6;1889:49;:::i;:::-;1873:66;:::i;:::-;1864:75;;1962:6;1955:5;1948:21;2000:4;1993:5;1989:16;2038:3;2029:6;2024:3;2020:16;2017:25;2014:112;;;2045:79;;:::i;:::-;2014:112;2135:41;2169:6;2164:3;2159;2135:41;:::i;:::-;1854:328;1770:412;;;;;:::o;2202:340::-;2258:5;2307:3;2300:4;2292:6;2288:17;2284:27;2274:122;;2315:79;;:::i;:::-;2274:122;2432:6;2419:20;2457:79;2532:3;2524:6;2517:4;2509:6;2505:17;2457:79;:::i;:::-;2448:88;;2264:278;2202:340;;;;:::o;2548:834::-;2636:6;2644;2693:2;2681:9;2672:7;2668:23;2664:32;2661:119;;;2699:79;;:::i;:::-;2661:119;2847:1;2836:9;2832:17;2819:31;2877:18;2869:6;2866:30;2863:117;;;2899:79;;:::i;:::-;2863:117;3004:63;3059:7;3050:6;3039:9;3035:22;3004:63;:::i;:::-;2994:73;;2790:287;3144:2;3133:9;3129:18;3116:32;3175:18;3167:6;3164:30;3161:117;;;3197:79;;:::i;:::-;3161:117;3302:63;3357:7;3348:6;3337:9;3333:22;3302:63;:::i;:::-;3292:73;;3087:288;2548:834;;;;;:::o;3388:126::-;3425:7;3465:42;3458:5;3454:54;3443:65;;3388:126;;;:::o;3520:96::-;3557:7;3586:24;3604:5;3586:24;:::i;:::-;3575:35;;3520:96;;;:::o;3622:126::-;3717:24;3735:5;3717:24;:::i;:::-;3712:3;3705:37;3622:126;;:::o;3754:238::-;3855:4;3893:2;3882:9;3878:18;3870:26;;3906:79;3982:1;3971:9;3967:17;3958:6;3906:79;:::i;:::-;3754:238;;;;:::o;3998:99::-;4050:6;4084:5;4078:12;4068:22;;3998:99;;;:::o;4103:148::-;4205:11;4242:3;4227:18;;4103:148;;;;:::o;4257:307::-;4325:1;4335:113;4349:6;4346:1;4343:13;4335:113;;;4434:1;4429:3;4425:11;4419:18;4415:1;4410:3;4406:11;4399:39;4371:2;4368:1;4364:10;4359:15;;4335:113;;;4466:6;4463:1;4460:13;4457:101;;;4546:1;4537:6;4532:3;4528:16;4521:27;4457:101;4306:258;4257:307;;;:::o;4570:377::-;4676:3;4704:39;4737:5;4704:39;:::i;:::-;4759:89;4841:6;4836:3;4759:89;:::i;:::-;4752:96;;4857:52;4902:6;4897:3;4890:4;4883:5;4879:16;4857:52;:::i;:::-;4934:6;4929:3;4925:16;4918:23;;4680:267;4570:377;;;;:::o;4953:275::-;5085:3;5107:95;5198:3;5189:6;5107:95;:::i;:::-;5100:102;;5219:3;5212:10;;4953:275;;;;:::o;5234:169::-;5318:11;5352:6;5347:3;5340:19;5392:4;5387:3;5383:14;5368:29;;5234:169;;;;:::o;5409:364::-;5497:3;5525:39;5558:5;5525:39;:::i;:::-;5580:71;5644:6;5639:3;5580:71;:::i;:::-;5573:78;;5660:52;5705:6;5700:3;5693:4;5686:5;5682:16;5660:52;:::i;:::-;5737:29;5759:6;5737:29;:::i;:::-;5732:3;5728:39;5721:46;;5501:272;5409:364;;;;:::o;5779:514::-;5940:4;5978:2;5967:9;5963:18;5955:26;;6027:9;6021:4;6017:20;6013:1;6002:9;5998:17;5991:47;6055:78;6128:4;6119:6;6055:78;:::i;:::-;6047:86;;6180:9;6174:4;6170:20;6165:2;6154:9;6150:18;6143:48;6208:78;6281:4;6272:6;6208:78;:::i;:::-;6200:86;;5779:514;;;;;:::o;6299:98::-;6350:6;6384:5;6378:12;6368:22;;6299:98;;;:::o;6403:147::-;6504:11;6541:3;6526:18;;6403:147;;;;:::o;6556:373::-;6660:3;6688:38;6720:5;6688:38;:::i;:::-;6742:88;6823:6;6818:3;6742:88;:::i;:::-;6735:95;;6839:52;6884:6;6879:3;6872:4;6865:5;6861:16;6839:52;:::i;:::-;6916:6;6911:3;6907:16;6900:23;;6664:265;6556:373;;;;:::o;6935:427::-;7111:3;7133:93;7222:3;7213:6;7133:93;:::i;:::-;7126:100;;7243:93;7332:3;7323:6;7243:93;:::i;:::-;7236:100;;7353:3;7346:10;;6935:427;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\n// importing the ERC-721 contract to deploy for an artist\r\nimport \"./IrlNFTCollection.sol\";\r\nimport \"./Artists.sol\";\r\nimport \"./Users.sol\";\r\n\r\nlibrary DeployNFTCollection {\r\n\r\n    /**\r\n      * @notice Generate the contract bytecode including constructor parameters\r\n      *\r\n      * @return bytecode of the contract\r\n      */\r\n    function getCreationBytecode(string memory _artistName, string memory _artistSymbol) private pure returns (bytes memory) {\r\n        bytes memory bytecode = type(IrlNFTCollection).creationCode;\r\n\r\n        return abi.encodePacked(bytecode, abi.encode(_artistName, _artistSymbol));\r\n    }\r\n\r\n    /**\r\n      * @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\r\n      *\r\n      * @return collectionAddress the address of the created collection contract\r\n      */\r\n    function deployNFTCollection(string memory _collectionName, string memory _collectionSymbol) external returns (address collectionAddress) {\r\n        // Import the bytecode of the contract to deploy\r\n        bytes memory collectionBytecode = getCreationBytecode(_collectionName, _collectionSymbol);\r\n\t\t\t\t// Make a random salt based on the artist name\r\n        bytes32 salt = keccak256(abi.encodePacked(_collectionName));\r\n\r\n        assembly {\r\n            collectionAddress := create2(0, add(collectionBytecode, 0x20), mload(collectionBytecode), salt)\r\n            if iszero(extcodesize(collectionAddress)) {\r\n                // revert if something gone wrong (collectionAddress doesn't contain an address)\r\n                revert(0, 0)\r\n            }\r\n        }\r\n        return collectionAddress;\r\n    }\r\n}\r\n\r\n/** \r\n  * @title In Real Life NFT collection Manager\r\n  * @author Geoffrey B. / Christophe B.\r\n  * @notice Give the ability to deploy a contract to manage ERC-721 tokens for an Artist. S/O @Snow\r\n  * @dev    If the contract is already deployed for an _artistName, it will revert.\r\n  */\r\ncontract IrlNFTCollectionManager is Artists, Users{\r\n    using DeployNFTCollection for string;\r\n\r\n    // Array of collection addresses\r\n    address[] public collectionArray;\r\n\r\n    /// @notice Event emitted each time a new NFT collection is created\r\n    event IrlNFTCollectionCreated(string _collectionName, address _collectionAddress, uint _timestamp);\r\n\r\n    /**\r\n      * @notice Generate the contract bytecode including constructor parameters\r\n      *\r\n      * @return bytecode of the contract\r\n      */\r\n    /*function getCreationBytecode(string memory _artistName, string memory _artistSymbol) private pure returns (bytes memory) {\r\n        bytes memory bytecode = type(IrlNFTCollection).creationCode;\r\n\r\n        return abi.encodePacked(bytecode, abi.encode(_artistName, _artistSymbol));\r\n    }*/\r\n\r\n    /**\r\n      * @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\r\n      *\r\n      * @return collectionAddress the address of the created collection contract\r\n      */\r\n    function createIrlNFTCollection(string memory _collectionName, string memory _collectionSymbol) external returns (address collectionAddress) {\r\n        // Import the bytecode of the contract to deploy\r\n        /*bytes memory collectionBytecode = getCreationBytecode(_collectionName, _collectionSymbol);\r\n\t\t\t\t// Make a random salt based on the artist name\r\n        bytes32 salt = keccak256(abi.encodePacked(_collectionName));\r\n\r\n        assembly {\r\n            collectionAddress := create2(0, add(collectionBytecode, 0x20), mload(collectionBytecode), salt)\r\n            if iszero(extcodesize(collectionAddress)) {\r\n                // revert if something gone wrong (collectionAddress doesn't contain an address)\r\n                revert(0, 0)\r\n            }\r\n        }\r\n        // Initialize the collection contract with the artist settings\r\n        //IrlNFTCollection(collectionAddress).initialize(msg.sender);*/\r\n        collectionAddress = _collectionName.deployNFTCollection(_collectionSymbol);\r\n        \r\n        // create the artist if not exist\r\n        if (artists[msg.sender].created == false) {\r\n            setArtist(_collectionName, \"\");\r\n        }\r\n        artists[msg.sender].collections[collectionAddress] = IrlNFTCollection(collectionAddress);\r\n        collectionArray.push(collectionAddress);\r\n\r\n        emit IrlNFTCollectionCreated(_collectionName, collectionAddress, block.timestamp);\r\n    }\r\n\r\n    /**\r\n      * @notice Return the list of collection addresses created\r\n      *\r\n      * @return collectionArray the array of collection addresses\r\n      */    \r\n    function getCollectionArray() public view returns( address  [] memory){\r\n        return collectionArray;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\chris\\git\\myduss\\contracts\\IrlNftCollectionManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/IrlNftCollectionManager.sol",
    "exportedSymbols": {
      "Address": [
        1835
      ],
      "Artists": [
        2347
      ],
      "Context": [
        1857
      ],
      "Counters": [
        1931
      ],
      "DeployNFTCollection": [
        2751
      ],
      "ERC165": [
        2158
      ],
      "ERC721": [
        1010
      ],
      "ERC721Enumerable": [
        1482
      ],
      "IERC165": [
        2170
      ],
      "IERC721": [
        1126
      ],
      "IERC721Enumerable": [
        1513
      ],
      "IERC721Metadata": [
        1540
      ],
      "IERC721Receiver": [
        1144
      ],
      "IrlNFTCollection": [
        2687
      ],
      "IrlNFTCollectionManager": [
        2839
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "Strings": [
        2134
      ],
      "Users": [
        2988
      ]
    },
    "id": 2840,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2689,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "absolutePath": "project:/contracts/IrlNFTCollection.sol",
        "file": "./IrlNFTCollection.sol",
        "id": 2690,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2840,
        "sourceUnit": 2688,
        "src": "119:32:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Artists.sol",
        "file": "./Artists.sol",
        "id": 2691,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2840,
        "sourceUnit": 2348,
        "src": "153:23:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Users.sol",
        "file": "./Users.sol",
        "id": 2692,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2840,
        "sourceUnit": 2989,
        "src": "178:21:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DeployNFTCollection",
        "contractDependencies": [
          2687
        ],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 2751,
        "linearizedBaseContracts": [
          2751
        ],
        "name": "DeployNFTCollection",
        "nameLocation": "211:19:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2719,
              "nodeType": "Block",
              "src": "512:164:16",
              "statements": [
                {
                  "assignments": [
                    2703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2703,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "536:8:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2719,
                      "src": "523:21:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2702,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "523:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2708,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2705,
                          "name": "IrlNFTCollection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2687,
                          "src": "552:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IrlNFTCollection_$2687_$",
                            "typeString": "type(contract IrlNFTCollection)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_IrlNFTCollection_$2687_$",
                            "typeString": "type(contract IrlNFTCollection)"
                          }
                        ],
                        "id": 2704,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "547:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "547:22:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_IrlNFTCollection_$2687",
                        "typeString": "type(contract IrlNFTCollection)"
                      }
                    },
                    "id": 2707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "547:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "523:59:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2711,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2703,
                        "src": "619:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2714,
                            "name": "_artistName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2695,
                            "src": "640:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2715,
                            "name": "_artistSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2697,
                            "src": "653:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 2712,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "629:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "629:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "629:38:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2709,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "602:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "602:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 2717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 2701,
                  "id": 2718,
                  "nodeType": "Return",
                  "src": "595:73:16"
                }
              ]
            },
            "documentation": {
              "id": 2693,
              "nodeType": "StructuredDocumentation",
              "src": "240:145:16",
              "text": " @notice Generate the contract bytecode including constructor parameters\n @return bytecode of the contract"
            },
            "id": 2720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreationBytecode",
            "nameLocation": "400:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2695,
                  "mutability": "mutable",
                  "name": "_artistName",
                  "nameLocation": "434:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "420:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2694,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2697,
                  "mutability": "mutable",
                  "name": "_artistSymbol",
                  "nameLocation": "461:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "447:27:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:56:16"
            },
            "returnParameters": {
              "id": 2701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "498:12:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "497:14:16"
            },
            "scope": 2751,
            "src": "391:285:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2749,
              "nodeType": "Block",
              "src": "1041:665:16",
              "statements": [
                {
                  "assignments": [
                    2731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2731,
                      "mutability": "mutable",
                      "name": "collectionBytecode",
                      "nameLocation": "1123:18:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2749,
                      "src": "1110:31:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2730,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2736,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2733,
                        "name": "_collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "1164:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2734,
                        "name": "_collectionSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "1181:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2732,
                      "name": "getCreationBytecode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2720,
                      "src": "1144:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 2735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:55:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:89:16"
                },
                {
                  "assignments": [
                    2738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2738,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1270:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2749,
                      "src": "1262:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2737,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1262:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2745,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2742,
                            "name": "_collectionName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2723,
                            "src": "1304:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 2740,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1287:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1287:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1287:33:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2739,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1277:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1262:59:16"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1343:321:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1358:95:16",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "collectionBytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1394:18:16"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1414:4:16",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1390:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1390:29:16"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "collectionBytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1427:18:16"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1421:5:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1421:25:16"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1448:4:16"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1379:7:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:74:16"
                        },
                        "variableNames": [
                          {
                            "name": "collectionAddress",
                            "nodeType": "YulIdentifier",
                            "src": "1358:17:16"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1509:144:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1633:1:16",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1636:1:16",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1626:6:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1626:12:16"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1626:12:16"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "collectionAddress",
                                  "nodeType": "YulIdentifier",
                                  "src": "1489:17:16"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "1477:11:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1477:30:16"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1470:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1470:38:16"
                        },
                        "nodeType": "YulIf",
                        "src": "1467:186:16"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2728,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1358:17:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2728,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1489:17:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2731,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1394:18:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2731,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1427:18:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2738,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1448:4:16",
                      "valueSize": 1
                    }
                  ],
                  "id": 2746,
                  "nodeType": "InlineAssembly",
                  "src": "1334:330:16"
                },
                {
                  "expression": {
                    "id": 2747,
                    "name": "collectionAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2728,
                    "src": "1681:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2729,
                  "id": 2748,
                  "nodeType": "Return",
                  "src": "1674:24:16"
                }
              ]
            },
            "documentation": {
              "id": 2721,
              "nodeType": "StructuredDocumentation",
              "src": "684:213:16",
              "text": " @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\n @return collectionAddress the address of the created collection contract"
            },
            "functionSelector": "9436e1d8",
            "id": 2750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployNFTCollection",
            "nameLocation": "912:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "946:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "932:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2725,
                  "mutability": "mutable",
                  "name": "_collectionSymbol",
                  "nameLocation": "977:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "963:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2724,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "931:64:16"
            },
            "returnParameters": {
              "id": 2729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2728,
                  "mutability": "mutable",
                  "name": "collectionAddress",
                  "nameLocation": "1022:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "1014:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:27:16"
            },
            "scope": 2751,
            "src": "903:803:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2840,
        "src": "203:1506:16",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2753,
              "name": "Artists",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2347,
              "src": "2036:7:16"
            },
            "id": 2754,
            "nodeType": "InheritanceSpecifier",
            "src": "2036:7:16"
          },
          {
            "baseName": {
              "id": 2755,
              "name": "Users",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2988,
              "src": "2045:5:16"
            },
            "id": 2756,
            "nodeType": "InheritanceSpecifier",
            "src": "2045:5:16"
          }
        ],
        "canonicalName": "IrlNFTCollectionManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2752,
          "nodeType": "StructuredDocumentation",
          "src": "1713:285:16",
          "text": " @title In Real Life NFT collection Manager\n @author Geoffrey B. / Christophe B.\n @notice Give the ability to deploy a contract to manage ERC-721 tokens for an Artist. S/O @Snow\n @dev    If the contract is already deployed for an _artistName, it will revert."
        },
        "fullyImplemented": true,
        "id": 2839,
        "linearizedBaseContracts": [
          2839,
          2988,
          2347,
          104,
          1857
        ],
        "name": "IrlNFTCollectionManager",
        "nameLocation": "2009:23:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 2759,
            "libraryName": {
              "id": 2757,
              "name": "DeployNFTCollection",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2751,
              "src": "2063:19:16"
            },
            "nodeType": "UsingForDirective",
            "src": "2057:37:16",
            "typeName": {
              "id": 2758,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2087:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8fa84e82",
            "id": 2762,
            "mutability": "mutable",
            "name": "collectionArray",
            "nameLocation": "2157:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 2839,
            "src": "2140:32:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2760,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2140:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2761,
              "nodeType": "ArrayTypeName",
              "src": "2140:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2763,
              "nodeType": "StructuredDocumentation",
              "src": "2181:67:16",
              "text": "@notice Event emitted each time a new NFT collection is created"
            },
            "eventSelector": "c536b3bec7a024b43ee2d84dcf6141d2566cdea9023953648d9e55d02ecf2560",
            "id": 2771,
            "name": "IrlNFTCollectionCreated",
            "nameLocation": "2260:23:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2765,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "2291:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "2284:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2767,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "2316:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "2308:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2769,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "2341:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "2336:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2283:69:16"
            },
            "src": "2254:99:16"
          },
          {
            "body": {
              "id": 2827,
              "nodeType": "Block",
              "src": "3169:1267:16",
              "statements": [
                {
                  "expression": {
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2781,
                      "name": "collectionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2779,
                      "src": "3949:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2784,
                          "name": "_collectionSymbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2776,
                          "src": "4005:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 2782,
                          "name": "_collectionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2774,
                          "src": "3969:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 2783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deployNFTCollection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2750,
                        "src": "3969:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_string_memory_ptr_$",
                          "typeString": "function (string memory,string memory) returns (address)"
                        }
                      },
                      "id": 2785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3969:54:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3949:74:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2787,
                  "nodeType": "ExpressionStatement",
                  "src": "3949:74:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2788,
                          "name": "artists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2195,
                          "src": "4091:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_artist_$2190_storage_$",
                            "typeString": "mapping(address => struct Artists.artist storage ref)"
                          }
                        },
                        "id": 2791,
                        "indexExpression": {
                          "expression": {
                            "id": 2789,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4099:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4099:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4091:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_artist_$2190_storage",
                          "typeString": "struct Artists.artist storage ref"
                        }
                      },
                      "id": 2792,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "created",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2182,
                      "src": "4091:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 2793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4122:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4091:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2801,
                  "nodeType": "IfStatement",
                  "src": "4087:99:16",
                  "trueBody": {
                    "id": 2800,
                    "nodeType": "Block",
                    "src": "4129:57:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2796,
                              "name": "_collectionName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2774,
                              "src": "4154:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 2797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4171:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 2795,
                            "name": "setArtist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2281,
                            "src": "4144:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 2798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4144:30:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2799,
                        "nodeType": "ExpressionStatement",
                        "src": "4144:30:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2802,
                            "name": "artists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2195,
                            "src": "4196:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_artist_$2190_storage_$",
                              "typeString": "mapping(address => struct Artists.artist storage ref)"
                            }
                          },
                          "id": 2805,
                          "indexExpression": {
                            "expression": {
                              "id": 2803,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4204:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4204:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4196:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_artist_$2190_storage",
                            "typeString": "struct Artists.artist storage ref"
                          }
                        },
                        "id": 2806,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collections",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2189,
                        "src": "4196:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IrlNFTCollection_$2687_$",
                          "typeString": "mapping(address => contract IrlNFTCollection)"
                        }
                      },
                      "id": 2808,
                      "indexExpression": {
                        "id": 2807,
                        "name": "collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "4228:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4196:50:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IrlNFTCollection_$2687",
                        "typeString": "contract IrlNFTCollection"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2810,
                          "name": "collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2779,
                          "src": "4266:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2809,
                        "name": "IrlNFTCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "4249:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IrlNFTCollection_$2687_$",
                          "typeString": "type(contract IrlNFTCollection)"
                        }
                      },
                      "id": 2811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4249:35:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IrlNFTCollection_$2687",
                        "typeString": "contract IrlNFTCollection"
                      }
                    },
                    "src": "4196:88:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IrlNFTCollection_$2687",
                      "typeString": "contract IrlNFTCollection"
                    }
                  },
                  "id": 2813,
                  "nodeType": "ExpressionStatement",
                  "src": "4196:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2817,
                        "name": "collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "4316:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2814,
                        "name": "collectionArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2762,
                        "src": "4295:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4295:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2819,
                  "nodeType": "ExpressionStatement",
                  "src": "4295:39:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2821,
                        "name": "_collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "4376:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2822,
                        "name": "collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "4393:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2823,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4412:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4412:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2820,
                      "name": "IrlNFTCollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2771,
                      "src": "4352:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256)"
                      }
                    },
                    "id": 2825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4352:76:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2826,
                  "nodeType": "EmitStatement",
                  "src": "4347:81:16"
                }
              ]
            },
            "documentation": {
              "id": 2772,
              "nodeType": "StructuredDocumentation",
              "src": "2809:213:16",
              "text": " @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\n @return collectionAddress the address of the created collection contract"
            },
            "functionSelector": "81c7f0b6",
            "id": 2828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createIrlNFTCollection",
            "nameLocation": "3037:22:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2774,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "3074:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3060:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3060:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "_collectionSymbol",
                  "nameLocation": "3105:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3091:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3091:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3059:64:16"
            },
            "returnParameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "mutability": "mutable",
                  "name": "collectionAddress",
                  "nameLocation": "3150:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3142:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3141:27:16"
            },
            "scope": 2839,
            "src": "3028:1408:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2837,
              "nodeType": "Block",
              "src": "4678:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 2835,
                    "name": "collectionArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2762,
                    "src": "4696:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2834,
                  "id": 2836,
                  "nodeType": "Return",
                  "src": "4689:22:16"
                }
              ]
            },
            "documentation": {
              "id": 2829,
              "nodeType": "StructuredDocumentation",
              "src": "4444:154:16",
              "text": " @notice Return the list of collection addresses created\n @return collectionArray the array of collection addresses"
            },
            "functionSelector": "ae6f371a",
            "id": 2838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCollectionArray",
            "nameLocation": "4617:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4635:2:16"
            },
            "returnParameters": {
              "id": 2834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2838,
                  "src": "4659:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2831,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4659:7:16",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2832,
                    "nodeType": "ArrayTypeName",
                    "src": "4659:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4657:21:16"
            },
            "scope": 2839,
            "src": "4608:111:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2840,
        "src": "2000:2722:16",
        "usedErrors": []
      }
    ],
    "src": "33:4691:16"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/IrlNftCollectionManager.sol",
    "exportedSymbols": {
      "Address": [
        1835
      ],
      "Artists": [
        2347
      ],
      "Context": [
        1857
      ],
      "Counters": [
        1931
      ],
      "DeployNFTCollection": [
        2751
      ],
      "ERC165": [
        2158
      ],
      "ERC721": [
        1010
      ],
      "ERC721Enumerable": [
        1482
      ],
      "IERC165": [
        2170
      ],
      "IERC721": [
        1126
      ],
      "IERC721Enumerable": [
        1513
      ],
      "IERC721Metadata": [
        1540
      ],
      "IERC721Receiver": [
        1144
      ],
      "IrlNFTCollection": [
        2687
      ],
      "IrlNFTCollectionManager": [
        2839
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "Strings": [
        2134
      ],
      "Users": [
        2988
      ]
    },
    "id": 2840,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2689,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "absolutePath": "project:/contracts/IrlNFTCollection.sol",
        "file": "./IrlNFTCollection.sol",
        "id": 2690,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2840,
        "sourceUnit": 2688,
        "src": "119:32:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Artists.sol",
        "file": "./Artists.sol",
        "id": 2691,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2840,
        "sourceUnit": 2348,
        "src": "153:23:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Users.sol",
        "file": "./Users.sol",
        "id": 2692,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2840,
        "sourceUnit": 2989,
        "src": "178:21:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DeployNFTCollection",
        "contractDependencies": [
          2687
        ],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 2751,
        "linearizedBaseContracts": [
          2751
        ],
        "name": "DeployNFTCollection",
        "nameLocation": "211:19:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2719,
              "nodeType": "Block",
              "src": "512:164:16",
              "statements": [
                {
                  "assignments": [
                    2703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2703,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "536:8:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2719,
                      "src": "523:21:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2702,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "523:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2708,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2705,
                          "name": "IrlNFTCollection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2687,
                          "src": "552:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IrlNFTCollection_$2687_$",
                            "typeString": "type(contract IrlNFTCollection)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_IrlNFTCollection_$2687_$",
                            "typeString": "type(contract IrlNFTCollection)"
                          }
                        ],
                        "id": 2704,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "547:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "547:22:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_IrlNFTCollection_$2687",
                        "typeString": "type(contract IrlNFTCollection)"
                      }
                    },
                    "id": 2707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "547:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "523:59:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2711,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2703,
                        "src": "619:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2714,
                            "name": "_artistName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2695,
                            "src": "640:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2715,
                            "name": "_artistSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2697,
                            "src": "653:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 2712,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "629:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "629:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "629:38:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2709,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "602:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "602:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 2717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 2701,
                  "id": 2718,
                  "nodeType": "Return",
                  "src": "595:73:16"
                }
              ]
            },
            "documentation": {
              "id": 2693,
              "nodeType": "StructuredDocumentation",
              "src": "240:145:16",
              "text": " @notice Generate the contract bytecode including constructor parameters\n @return bytecode of the contract"
            },
            "id": 2720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreationBytecode",
            "nameLocation": "400:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2695,
                  "mutability": "mutable",
                  "name": "_artistName",
                  "nameLocation": "434:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "420:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2694,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2697,
                  "mutability": "mutable",
                  "name": "_artistSymbol",
                  "nameLocation": "461:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "447:27:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:56:16"
            },
            "returnParameters": {
              "id": 2701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2720,
                  "src": "498:12:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "497:14:16"
            },
            "scope": 2751,
            "src": "391:285:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2749,
              "nodeType": "Block",
              "src": "1041:665:16",
              "statements": [
                {
                  "assignments": [
                    2731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2731,
                      "mutability": "mutable",
                      "name": "collectionBytecode",
                      "nameLocation": "1123:18:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2749,
                      "src": "1110:31:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2730,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2736,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2733,
                        "name": "_collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "1164:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2734,
                        "name": "_collectionSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "1181:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2732,
                      "name": "getCreationBytecode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2720,
                      "src": "1144:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 2735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:55:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1110:89:16"
                },
                {
                  "assignments": [
                    2738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2738,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1270:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2749,
                      "src": "1262:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2737,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1262:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2745,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2742,
                            "name": "_collectionName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2723,
                            "src": "1304:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 2740,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1287:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1287:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1287:33:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2739,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1277:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1262:59:16"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1343:321:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1358:95:16",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "collectionBytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1394:18:16"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1414:4:16",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1390:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1390:29:16"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "collectionBytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1427:18:16"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1421:5:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1421:25:16"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1448:4:16"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1379:7:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:74:16"
                        },
                        "variableNames": [
                          {
                            "name": "collectionAddress",
                            "nodeType": "YulIdentifier",
                            "src": "1358:17:16"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1509:144:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1633:1:16",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1636:1:16",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1626:6:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1626:12:16"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1626:12:16"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "collectionAddress",
                                  "nodeType": "YulIdentifier",
                                  "src": "1489:17:16"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "1477:11:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1477:30:16"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1470:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1470:38:16"
                        },
                        "nodeType": "YulIf",
                        "src": "1467:186:16"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 2728,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1358:17:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2728,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1489:17:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2731,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1394:18:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2731,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1427:18:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2738,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1448:4:16",
                      "valueSize": 1
                    }
                  ],
                  "id": 2746,
                  "nodeType": "InlineAssembly",
                  "src": "1334:330:16"
                },
                {
                  "expression": {
                    "id": 2747,
                    "name": "collectionAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2728,
                    "src": "1681:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2729,
                  "id": 2748,
                  "nodeType": "Return",
                  "src": "1674:24:16"
                }
              ]
            },
            "documentation": {
              "id": 2721,
              "nodeType": "StructuredDocumentation",
              "src": "684:213:16",
              "text": " @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\n @return collectionAddress the address of the created collection contract"
            },
            "functionSelector": "9436e1d8",
            "id": 2750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployNFTCollection",
            "nameLocation": "912:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "946:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "932:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2725,
                  "mutability": "mutable",
                  "name": "_collectionSymbol",
                  "nameLocation": "977:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "963:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2724,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "931:64:16"
            },
            "returnParameters": {
              "id": 2729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2728,
                  "mutability": "mutable",
                  "name": "collectionAddress",
                  "nameLocation": "1022:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "1014:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:27:16"
            },
            "scope": 2751,
            "src": "903:803:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2840,
        "src": "203:1506:16",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2753,
              "name": "Artists",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2347,
              "src": "2036:7:16"
            },
            "id": 2754,
            "nodeType": "InheritanceSpecifier",
            "src": "2036:7:16"
          },
          {
            "baseName": {
              "id": 2755,
              "name": "Users",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2988,
              "src": "2045:5:16"
            },
            "id": 2756,
            "nodeType": "InheritanceSpecifier",
            "src": "2045:5:16"
          }
        ],
        "canonicalName": "IrlNFTCollectionManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2752,
          "nodeType": "StructuredDocumentation",
          "src": "1713:285:16",
          "text": " @title In Real Life NFT collection Manager\n @author Geoffrey B. / Christophe B.\n @notice Give the ability to deploy a contract to manage ERC-721 tokens for an Artist. S/O @Snow\n @dev    If the contract is already deployed for an _artistName, it will revert."
        },
        "fullyImplemented": true,
        "id": 2839,
        "linearizedBaseContracts": [
          2839,
          2988,
          2347,
          104,
          1857
        ],
        "name": "IrlNFTCollectionManager",
        "nameLocation": "2009:23:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 2759,
            "libraryName": {
              "id": 2757,
              "name": "DeployNFTCollection",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2751,
              "src": "2063:19:16"
            },
            "nodeType": "UsingForDirective",
            "src": "2057:37:16",
            "typeName": {
              "id": 2758,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2087:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8fa84e82",
            "id": 2762,
            "mutability": "mutable",
            "name": "collectionArray",
            "nameLocation": "2157:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 2839,
            "src": "2140:32:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2760,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2140:7:16",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2761,
              "nodeType": "ArrayTypeName",
              "src": "2140:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2763,
              "nodeType": "StructuredDocumentation",
              "src": "2181:67:16",
              "text": "@notice Event emitted each time a new NFT collection is created"
            },
            "eventSelector": "c536b3bec7a024b43ee2d84dcf6141d2566cdea9023953648d9e55d02ecf2560",
            "id": 2771,
            "name": "IrlNFTCollectionCreated",
            "nameLocation": "2260:23:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2765,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "2291:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "2284:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2767,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "2316:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "2308:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2769,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "2341:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "2336:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2283:69:16"
            },
            "src": "2254:99:16"
          },
          {
            "body": {
              "id": 2827,
              "nodeType": "Block",
              "src": "3169:1267:16",
              "statements": [
                {
                  "expression": {
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2781,
                      "name": "collectionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2779,
                      "src": "3949:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2784,
                          "name": "_collectionSymbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2776,
                          "src": "4005:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 2782,
                          "name": "_collectionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2774,
                          "src": "3969:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 2783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deployNFTCollection",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2750,
                        "src": "3969:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_string_memory_ptr_$",
                          "typeString": "function (string memory,string memory) returns (address)"
                        }
                      },
                      "id": 2785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3969:54:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3949:74:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2787,
                  "nodeType": "ExpressionStatement",
                  "src": "3949:74:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2788,
                          "name": "artists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2195,
                          "src": "4091:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_artist_$2190_storage_$",
                            "typeString": "mapping(address => struct Artists.artist storage ref)"
                          }
                        },
                        "id": 2791,
                        "indexExpression": {
                          "expression": {
                            "id": 2789,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4099:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4099:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4091:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_artist_$2190_storage",
                          "typeString": "struct Artists.artist storage ref"
                        }
                      },
                      "id": 2792,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "created",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2182,
                      "src": "4091:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 2793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4122:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4091:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2801,
                  "nodeType": "IfStatement",
                  "src": "4087:99:16",
                  "trueBody": {
                    "id": 2800,
                    "nodeType": "Block",
                    "src": "4129:57:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2796,
                              "name": "_collectionName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2774,
                              "src": "4154:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 2797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4171:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 2795,
                            "name": "setArtist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2281,
                            "src": "4144:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 2798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4144:30:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2799,
                        "nodeType": "ExpressionStatement",
                        "src": "4144:30:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2802,
                            "name": "artists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2195,
                            "src": "4196:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_artist_$2190_storage_$",
                              "typeString": "mapping(address => struct Artists.artist storage ref)"
                            }
                          },
                          "id": 2805,
                          "indexExpression": {
                            "expression": {
                              "id": 2803,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4204:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4204:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4196:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_artist_$2190_storage",
                            "typeString": "struct Artists.artist storage ref"
                          }
                        },
                        "id": 2806,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collections",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2189,
                        "src": "4196:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IrlNFTCollection_$2687_$",
                          "typeString": "mapping(address => contract IrlNFTCollection)"
                        }
                      },
                      "id": 2808,
                      "indexExpression": {
                        "id": 2807,
                        "name": "collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "4228:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4196:50:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IrlNFTCollection_$2687",
                        "typeString": "contract IrlNFTCollection"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2810,
                          "name": "collectionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2779,
                          "src": "4266:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2809,
                        "name": "IrlNFTCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "4249:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IrlNFTCollection_$2687_$",
                          "typeString": "type(contract IrlNFTCollection)"
                        }
                      },
                      "id": 2811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4249:35:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IrlNFTCollection_$2687",
                        "typeString": "contract IrlNFTCollection"
                      }
                    },
                    "src": "4196:88:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IrlNFTCollection_$2687",
                      "typeString": "contract IrlNFTCollection"
                    }
                  },
                  "id": 2813,
                  "nodeType": "ExpressionStatement",
                  "src": "4196:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2817,
                        "name": "collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "4316:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2814,
                        "name": "collectionArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2762,
                        "src": "4295:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4295:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2819,
                  "nodeType": "ExpressionStatement",
                  "src": "4295:39:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2821,
                        "name": "_collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2774,
                        "src": "4376:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2822,
                        "name": "collectionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "4393:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2823,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4412:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4412:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2820,
                      "name": "IrlNFTCollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2771,
                      "src": "4352:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256)"
                      }
                    },
                    "id": 2825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4352:76:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2826,
                  "nodeType": "EmitStatement",
                  "src": "4347:81:16"
                }
              ]
            },
            "documentation": {
              "id": 2772,
              "nodeType": "StructuredDocumentation",
              "src": "2809:213:16",
              "text": " @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\n @return collectionAddress the address of the created collection contract"
            },
            "functionSelector": "81c7f0b6",
            "id": 2828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createIrlNFTCollection",
            "nameLocation": "3037:22:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2774,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "3074:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3060:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2773,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3060:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "_collectionSymbol",
                  "nameLocation": "3105:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3091:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3091:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3059:64:16"
            },
            "returnParameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "mutability": "mutable",
                  "name": "collectionAddress",
                  "nameLocation": "3150:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "3142:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3141:27:16"
            },
            "scope": 2839,
            "src": "3028:1408:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2837,
              "nodeType": "Block",
              "src": "4678:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 2835,
                    "name": "collectionArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2762,
                    "src": "4696:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2834,
                  "id": 2836,
                  "nodeType": "Return",
                  "src": "4689:22:16"
                }
              ]
            },
            "documentation": {
              "id": 2829,
              "nodeType": "StructuredDocumentation",
              "src": "4444:154:16",
              "text": " @notice Return the list of collection addresses created\n @return collectionArray the array of collection addresses"
            },
            "functionSelector": "ae6f371a",
            "id": 2838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCollectionArray",
            "nameLocation": "4617:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4635:2:16"
            },
            "returnParameters": {
              "id": 2834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2838,
                  "src": "4659:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2831,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4659:7:16",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2832,
                    "nodeType": "ArrayTypeName",
                    "src": "4659:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4657:21:16"
            },
            "scope": 2839,
            "src": "4608:111:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2840,
        "src": "2000:2722:16",
        "usedErrors": []
      }
    ],
    "src": "33:4691:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-29T21:09:02.191Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deployNFTCollection(string,string)": {
        "returns": {
          "collectionAddress": "the address of the created collection contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deployNFTCollection(string,string)": {
        "notice": "Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later"
      }
    },
    "version": 1
  }
}